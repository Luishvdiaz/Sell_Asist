/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectosa;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import ds.desktop.notify.DesktopNotify;
import java.awt.Desktop;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Luis Diaz
 */
public class reportes extends javax.swing.JFrame {

    /**
     * Creates new form reportes
     */
    public reportes() {
        initComponents();
        
        DefaultTableModel modelo_historial = new DefaultTableModel();
        modelo_historial.addColumn("Descripción");
        modelo_historial.addColumn("Fecha y Hora");
        ArrayList<Object[]> datos = new ArrayList<Object[]>();
        datos=Conexion.llenar_historial();
        for(int i=0;i<datos.size();i++){
            modelo_historial.addRow(datos.get(i));
        }
        historial.setModel(modelo_historial);
        
        
        dia.removeAllItems();
        
        
        mes.removeAllItems();
        mes.addItem("Enero");
        mes.addItem("Febrero");
        mes.addItem("Marzo");
        mes.addItem("Abril");
        mes.addItem("Mayo");
        mes.addItem("Junio");
        mes.addItem("Julio");
        mes.addItem("Agosto");
        mes.addItem("Septiembre");
        mes.addItem("Octubre");
        mes.addItem("Noviembre");
        mes.addItem("Diciembre");
        
        año.removeAllItems();
        año.addItem("2018");
        año.addItem("2019");
        
        
        dia1.removeAllItems();
        
        
        mes1.removeAllItems();
        mes1.addItem("Enero");
        mes1.addItem("Febrero");
        mes1.addItem("Marzo");
        mes1.addItem("Abril");
        mes1.addItem("Mayo");
        mes1.addItem("Junio");
        mes1.addItem("Julio");
        mes1.addItem("Agosto");
        mes1.addItem("Septiembre");
        mes1.addItem("Octubre");
        mes1.addItem("Noviembre");
        mes1.addItem("Diciembre");
        
        año1.removeAllItems();
        año1.addItem("2018");
        año1.addItem("2019");
    }

    
    
    
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("proyectosa/analytics.png"));


        return retValue;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        comboFiltro = new javax.swing.JComboBox<>();
        txtFiltro = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        historial = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        mes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        dia = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        año = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        mes1 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        dia1 = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        año1 = new javax.swing.JComboBox<>();
        jSeparator3 = new javax.swing.JSeparator();
        fecha = new javax.swing.JCheckBox();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel4.setText("Información a incluir en el reporte");

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Historial de acciones");

        jLabel3.setText("Buscar por:");

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Descripción", "Fecha y Hora" }));

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        historial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(historial);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 606, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosa/list.png"))); // NOI18N
        jButton1.setText("Generar reporte");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jCheckBox1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox1.setText("Registro");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox2.setText("Clientes");

        jCheckBox3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox3.setText("Pendientes");

        jCheckBox5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jCheckBox5.setText("Usuarios");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("De:");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel5.setText("A");

        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mesMouseClicked(evt);
            }
        });

        jLabel6.setText("Mes:");

        jLabel7.setText("Día:");

        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel8.setText("Año:");

        año.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Mes:");

        mes1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mes1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mes1MouseClicked(evt);
            }
        });

        jLabel10.setText("Día:");

        dia1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel11.setText("Año:");

        año1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mes1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dia1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(año1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(dia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(año, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mes1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(dia1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(año1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        fecha.setText("Rango de fecha");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox5)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jCheckBox3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fecha)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jSeparator3)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(fecha))
                .addGap(2, 2, 2)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox2)
                .addGap(36, 36, 36))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(638, 638, 638))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 239, Short.MAX_VALUE)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(77, 77, 77)
                                        .addComponent(jLabel4)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private TableRowSorter trsFiltro;
    public void filtro() {
        int columnaABuscar = 0;
        if (comboFiltro.getSelectedItem() == "Descripción") {
            columnaABuscar = 0;
        }
        if (comboFiltro.getSelectedItem() == "Fecha y Hora") {
            columnaABuscar = 1;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter(txtFiltro.getText(), columnaABuscar));
    }
    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped
        // TODO add your handling code here:
        txtFiltro.addKeyListener(new KeyAdapter() {
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtFiltro.getText());
                txtFiltro.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(historial.getModel());
        historial.setRowSorter(trsFiltro);
    }//GEN-LAST:event_txtFiltroKeyTyped

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //f, f1 y d, m, a y d1, m1, a1
        
        
//        String f=(String) año.getSelectedItem()+"-"+mes.getSelectedItem()+"-"+dia.getSelectedItem();
//        String f1=(String) año1.getSelectedItem()+"-"+mes1.getSelectedItem()+"-"+dia1.getSelectedItem();
//        String rango="De: "+f+" a "+f1+"\n";
//        System.out.println(rango);
//        
//        
//        String di=(String) dia.getSelectedItem();
//        int d=Integer.parseInt(di);
//        
//        String añ=(String) año.getSelectedItem();
//        int a=Integer.parseInt(añ);
//        
//        String m=(String) mes.getSelectedItem();
//        
//        
//        String di1=(String) dia1.getSelectedItem();
//        int d1=Integer.parseInt(di1); 
//        
//        String añ1=(String) año1.getSelectedItem();
//        int a1=Integer.parseInt(añ1);
//        
//        String m1=(String) mes1.getSelectedItem();
        
        
        if(fecha.isSelected()){
            String f=(String) año.getSelectedItem()+"-"+mes.getSelectedItem()+"-"+dia.getSelectedItem();
            String f1=(String) año1.getSelectedItem()+"-"+mes1.getSelectedItem()+"-"+dia1.getSelectedItem();
            String rango="De: "+f+" a "+f1+"\n";
            System.out.println(rango);


            String di=(String) dia.getSelectedItem();
            int d=Integer.parseInt(di);

            String añ=(String) año.getSelectedItem();
            int a=Integer.parseInt(añ);

            String m=(String) mes.getSelectedItem();


            String di1=(String) dia1.getSelectedItem();
            int d1=Integer.parseInt(di1); 

            String añ1=(String) año1.getSelectedItem();
            int a1=Integer.parseInt(añ1);

            String m1=(String) mes1.getSelectedItem();
        try {                                         
            // TODO add your handling code here:
            Document document = new Document();
            FileOutputStream fileOutputStream = null;
            try {
                fileOutputStream = new FileOutputStream("Reporte_Sell_Assist.pdf");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                com.itextpdf.text.pdf.PdfWriter.getInstance(document, fileOutputStream);
            } catch (DocumentException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            }
            document.open();

            //            Image image = null;
            //            image = Image.getInstance("PEPON.jpg");
            //            image.scaleAbsolute(80f, 60f);
            PdfPTable table = new PdfPTable(2);
            float[] longitudes = { 5.0f, 5.0f };
            PdfPCell cell = new PdfPCell();
            try {
                //            cell.setColspan(5);
            //            cell.setBorderColor(BaseColor.WHITE);
            //            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //            table.addCell(cell);
            document.add(table);
            } catch (DocumentException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            }

            Font fontContenido = FontFactory.getFont(FontFactory.TIMES_ROMAN.toString(), 11, Font.NORMAL,BaseColor.DARK_GRAY);
            Font fontTitulos = FontFactory.getFont(FontFactory.HELVETICA, 13, Font.BOLD);
            Font fontTitulos_menores = FontFactory.getFont(FontFactory.HELVETICA, 10, Font.BOLD);
            Font fontTitulos_tablas = FontFactory.getFont(FontFactory.HELVETICA, 10);
            Font Titulos_tablas = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD);
            table = new PdfPTable(1);
            cell.setColspan(5);
            cell.setBorderColor(BaseColor.WHITE);
            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(cell);
            Paragraph paragraph = new Paragraph();
            paragraph.add(new Phrase("                                                           Sell Assist Content\n", fontTitulos));
            paragraph.add(new Phrase(Chunk.NEWLINE));
            
            Date date = new Date();
            DateFormat hourdateFormat = new SimpleDateFormat("HH:mm:ss dd/MM/yyyy");
//            System.out.println("Hora y fecha: "+hourdateFormat.format(date));
            paragraph.add(new Phrase("Hora y Fecha: "+hourdateFormat.format(date)+"\n", fontTitulos_tablas));
            paragraph.add(new Phrase(Chunk.NEWLINE));
            
            Conexion.conectar();
            ArrayList<Object[]> datos = new ArrayList<Object[]>();
            String[ ] uno = new String[datos.size()];

        if(jCheckBox1.isSelected()){
            //REGISTRO
            datos=Conexion.llenar_historial_fecha(f, f1);
            uno = new String[datos.size()];
            paragraph.add(new Phrase("Registros\n", Titulos_tablas));
            paragraph.add(new Phrase(rango, fontTitulos_menores));
            paragraph.add(new Phrase("Descripción                              Fecha\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
        }
        paragraph.add("\n");
        }
        if(jCheckBox2.isSelected()){
            //CLIENTES
            datos=Conexion.clientes();
            paragraph.add(new Phrase("Clientes\n", Titulos_tablas));
            paragraph.add(new Phrase("ID  Nombre        Telefono       Correo electrónico       Comentarios       Creado por\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
            }
            paragraph.add("\n");
        }
        if(jCheckBox3.isSelected()){
            //PENDIENTES
            datos=Conexion.llenar_pendientes_fecha(a, d, m, a1, d1, m1);
            uno = new String[datos.size()];
            paragraph.add(new Phrase("Pendientes\n", Titulos_tablas));
            paragraph.add(new Phrase(rango, fontTitulos_menores));
            paragraph.add(new Phrase("Nombre       Descripción           Fecha\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
        }
        paragraph.add("\n");
        }
        if(jCheckBox5.isSelected()){
            //USUARIOS
            datos=Conexion.users();
            uno = new String[datos.size()];
            paragraph.add(new Phrase("Usuarios\n", Titulos_tablas));
            paragraph.add(new Phrase("ID   Nombre             Contraseña\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
        }
        paragraph.add("\n");
        }
            document.add(paragraph);
//            paragraph.add(new Phrase(" Prueba exitosa shavo :v", fontContenido));
            document.close();


            DesktopNotify.showDesktopMessage("Hecho", "El reporte se generó correctamente", DesktopNotify.SUCCESS, 7000L);
            int sec=JOptionPane.showConfirmDialog(null, "Reporte generado exitosamente\n¿Desea abrirlo?");
            if(sec==JOptionPane.YES_OPTION){
            document.close();
            File file = new File("Reporte_Sell_Assist.pdf");
            Desktop.getDesktop().open(file);
        }
        } catch (DocumentException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
        
        }else{
        
        
        
        
        
        
        try {                                         
            // TODO add your handling code here:
            Document document = new Document();
            FileOutputStream fileOutputStream = null;
            try {
                fileOutputStream = new FileOutputStream("Reporte_Sell_Assist.pdf");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                com.itextpdf.text.pdf.PdfWriter.getInstance(document, fileOutputStream);
            } catch (DocumentException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            }
            document.open();

            //            Image image = null;
            //            image = Image.getInstance("PEPON.jpg");
            //            image.scaleAbsolute(80f, 60f);
            PdfPTable table = new PdfPTable(2);
            float[] longitudes = { 5.0f, 5.0f };
            PdfPCell cell = new PdfPCell();
            try {
                //            cell.setColspan(5);
            //            cell.setBorderColor(BaseColor.WHITE);
            //            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            //            table.addCell(cell);
            document.add(table);
            } catch (DocumentException ex) {
                Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
            }

            Font fontContenido = FontFactory.getFont(FontFactory.TIMES_ROMAN.toString(), 11, Font.NORMAL,BaseColor.DARK_GRAY);
            Font fontTitulos = FontFactory.getFont(FontFactory.HELVETICA, 13, Font.BOLD);
            Font fontTitulos_tablas = FontFactory.getFont(FontFactory.HELVETICA, 10);
            Font Titulos_tablas = FontFactory.getFont(FontFactory.HELVETICA, 12, Font.BOLD);
            table = new PdfPTable(1);
            cell.setColspan(5);
            cell.setBorderColor(BaseColor.WHITE);
            cell.setHorizontalAlignment(Element.ALIGN_RIGHT);
            table.addCell(cell);
            Paragraph paragraph = new Paragraph();
            paragraph.add(new Phrase("                                                           Sell Assist Content\n", fontTitulos));
            paragraph.add(new Phrase(Chunk.NEWLINE));
            
            Date date = new Date();
            DateFormat hourdateFormat = new SimpleDateFormat("HH:mm:ss dd/MM/yyyy");
//            System.out.println("Hora y fecha: "+hourdateFormat.format(date));
            paragraph.add(new Phrase("Hora y Fecha: "+hourdateFormat.format(date)+"\n", fontTitulos_tablas));
            paragraph.add(new Phrase(Chunk.NEWLINE));
            
            Conexion.conectar();
            ArrayList<Object[]> datos = new ArrayList<Object[]>();
            String[ ] uno = new String[datos.size()];

        if(jCheckBox1.isSelected()){
            //REGISTRO
            datos=Conexion.llenar_historial();
            uno = new String[datos.size()];
            paragraph.add(new Phrase("Registros\n", Titulos_tablas));
            paragraph.add(new Phrase("Descripción                                 Fecha\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
        }
        paragraph.add("\n");
        }
        if(jCheckBox2.isSelected()){
            //CLIENTES
            datos=Conexion.clientes();
            paragraph.add(new Phrase("Clientes\n", Titulos_tablas));
            paragraph.add(new Phrase("ID  Nombre        Telefono       Correo electrónico       Comentarios       Creado por\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
            }
            paragraph.add("\n");
        }
        if(jCheckBox3.isSelected()){
            //PENDIENTES
            datos=Conexion.llenar_pendientes();
            uno = new String[datos.size()];
            paragraph.add(new Phrase("Pendientes\n", Titulos_tablas));
            paragraph.add(new Phrase("Nombre       Descripción           Fecha\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
        }
        paragraph.add("\n");
        }
        if(jCheckBox5.isSelected()){
            //USUARIOS
            datos=Conexion.users();
            uno = new String[datos.size()];
            paragraph.add(new Phrase("Usuarios\n", Titulos_tablas));
            paragraph.add(new Phrase("ID   Nombre             Contraseña\n", fontTitulos_tablas));
            for(int i=0;i<datos.size();i++){
            paragraph.add(new Phrase(""+Arrays.toString(datos.get(i)), fontContenido));
            paragraph.add("\n");
        }
        paragraph.add("\n");
        }
            document.add(paragraph);
//            paragraph.add(new Phrase(" Prueba exitosa shavo :v", fontContenido));
            document.close();


            DesktopNotify.showDesktopMessage("Hecho", "El reporte se generó correctamente", DesktopNotify.SUCCESS, 7000L);
            int sec=JOptionPane.showConfirmDialog(null, "Reporte generado exitosamente\n¿Desea abrirlo?");
            if(sec==JOptionPane.YES_OPTION){
            document.close();
            File file = new File("Reporte_Sell_Assist.pdf");
            Desktop.getDesktop().open(file);
        }
        } catch (DocumentException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(reportes.class.getName()).log(Level.SEVERE, null, ex);
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void mesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mesMouseClicked
        // TODO add your handling code here:
        String mesi=mes.getSelectedItem().toString();
        
        if(mesi=="Diciembre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Noviembre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Octubre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Septiembre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Agosto"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Julio"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Junio"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Mayo"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Abril"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Marzo"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Febrero"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
        }
        
        if(mesi == "Enero"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
    }//GEN-LAST:event_mesMouseClicked

    private void mes1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mes1MouseClicked
        String mesi=mes1.getSelectedItem().toString();
        
        if(mesi=="Diciembre"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
        if(mesi=="Noviembre"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
        }
        
        if(mesi=="Octubre"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
        if(mesi=="Septiembre"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
        }
        
        if(mesi=="Agosto"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
        if(mesi=="Julio"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
        if(mesi=="Junio"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
        }
        
        if(mesi=="Mayo"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
        if(mesi=="Abril"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
        }
        
        if(mesi=="Marzo"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
        if(mesi=="Febrero"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
        }
        
        if(mesi == "Enero"){
            dia1.removeAllItems();
            dia1.addItem("1");
            dia1.addItem("2");
            dia1.addItem("3");
            dia1.addItem("4");
            dia1.addItem("5");
            dia1.addItem("6");
            dia1.addItem("7");
            dia1.addItem("8");
            dia1.addItem("9");
            dia1.addItem("10");
            dia1.addItem("11");
            dia1.addItem("12");
            dia1.addItem("13");
            dia1.addItem("14");
            dia1.addItem("15");
            dia1.addItem("16");
            dia1.addItem("17");
            dia1.addItem("18");
            dia1.addItem("19");
            dia1.addItem("20");
            dia1.addItem("21");
            dia1.addItem("22");
            dia1.addItem("23");
            dia1.addItem("24");
            dia1.addItem("25");
            dia1.addItem("26");
            dia1.addItem("27");
            dia1.addItem("28");
            dia1.addItem("29");
            dia1.addItem("30");
            dia1.addItem("31");
        }
        
    }//GEN-LAST:event_mes1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(reportes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new reportes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> año;
    private javax.swing.JComboBox<String> año1;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JComboBox<String> dia;
    private javax.swing.JComboBox<String> dia1;
    private javax.swing.JCheckBox fecha;
    private javax.swing.JTable historial;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JComboBox<String> mes;
    private javax.swing.JComboBox<String> mes1;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
