/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectosa;

import ds.desktop.notify.DesktopNotify;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import static proyectosa.Conexion.conectar;
import static proyectosa.Conexion.historial_pendientes;
import static proyectosa.Conexion.id_cliente;
import static proyectosa.Conexion.pendientes;
import static proyectosa.login.conexion;
import static proyectosa.principal.pendientes;

public class pendiente extends javax.swing.JFrame {

    /**
     * Creates new form pendiente
     */
    
    static Connection conexion=null;
    static Statement sentencia;
    static ResultSet resultado;
    static ResultSetMetaData resultadometa;
    
    public pendiente() {
        initComponents();
        jPanel1.setVisible(false);
        jComboBox1.removeAllItems();
        
        String ruta="jdbc:mysql://localhost:3306/asistente_ventas";
        String user="root";
        String pass="344391";
        
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conexion = DriverManager.getConnection(ruta,user,pass); 
            sentencia = conexion.createStatement();
            System.out.println("Conectado");
        } catch (Exception e) {
            System.out.println("No conectado");
        }
        
        String q = "SELECT nombre FROM clientes";
        
        try {
            
            resultado = sentencia.executeQuery(q);
            resultadometa = resultado.getMetaData();
            int r=0;
            String str = "";
                while(resultado.next()){
                        str = resultado.getString(1);
                        jComboBox1.addItem(resultado.getString(1));
                    r++;
                }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error: "+e);
        }
        
        dia.removeAllItems();
        
        
        mes.removeAllItems();
        mes.addItem("Enero");
        mes.addItem("Febrero");
        mes.addItem("Marzo");
        mes.addItem("Abril");
        mes.addItem("Mayo");
        mes.addItem("Junio");
        mes.addItem("Julio");
        mes.addItem("Agosto");
        mes.addItem("Septiembre");
        mes.addItem("Octubre");
        mes.addItem("Noviembre");
        mes.addItem("Diciembre");
        
        año.removeAllItems();
        año.addItem("2018");
        año.addItem("2019");
    }
    Thread hilo;
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        titulo = new javax.swing.JTextField();
        dia = new javax.swing.JComboBox<>();
        mes = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        año = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        des = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(640, 418));
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Pendiente");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(270, 10, 90, 24);

        jLabel2.setText("Título");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(31, 47, 31, 16);

        jLabel3.setText("Descripción");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(31, 93, 68, 16);

        jLabel4.setText("Para el día");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(31, 228, 60, 16);

        jCheckBox1.setText("Relación con un cliente");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });
        getContentPane().add(jCheckBox1);
        jCheckBox1.setBounds(31, 281, 160, 24);

        jLabel5.setText("Nombre del cliente");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(20, 310, 380, 26);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectosa/success (1).png"))); // NOI18N
        jButton1.setText("Guardar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(460, 300, 130, 48);
        getContentPane().add(titulo);
        titulo.setBounds(150, 43, 438, 24);

        dia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(dia);
        dia.setBounds(290, 230, 74, 26);

        mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        mes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mesMouseClicked(evt);
            }
        });
        getContentPane().add(mes);
        mes.setBounds(180, 230, 80, 26);

        jLabel6.setText("Día");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(270, 230, 18, 16);

        jLabel7.setText("Mes");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(150, 230, 24, 16);

        jLabel8.setText("Año");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(382, 228, 22, 16);

        año.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(año);
        año.setBounds(410, 230, 85, 26);

        des.setColumns(20);
        des.setRows(5);
        jScrollPane1.setViewportView(des);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(150, 93, 438, 124);
        getContentPane().add(jSeparator1);
        jSeparator1.setBounds(20, 270, 580, 10);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
        getImage(ClassLoader.getSystemResource("proyectosa/badge.png"));
        return retValue;
    }
    
    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        // TODO add your handling code here:
        if(jCheckBox1.isSelected()){
            jPanel1.setVisible(true);
        }else{
            jPanel1.setVisible(false);
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void mesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mesMouseClicked
//        hilo.start();
        String mesi=mes.getSelectedItem().toString();
        
        if(mesi=="Diciembre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Noviembre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Octubre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Septiembre"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Agosto"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Julio"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Junio"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Mayo"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Abril"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
        }
        
        if(mesi=="Marzo"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
        
        if(mesi=="Febrero"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
        }
        
        if(mesi == "Enero"){
            dia.removeAllItems();
            dia.addItem("1");
            dia.addItem("2");
            dia.addItem("3");
            dia.addItem("4");
            dia.addItem("5");
            dia.addItem("6");
            dia.addItem("7");
            dia.addItem("8");
            dia.addItem("9");
            dia.addItem("10");
            dia.addItem("11");
            dia.addItem("12");
            dia.addItem("13");
            dia.addItem("14");
            dia.addItem("15");
            dia.addItem("16");
            dia.addItem("17");
            dia.addItem("18");
            dia.addItem("19");
            dia.addItem("20");
            dia.addItem("21");
            dia.addItem("22");
            dia.addItem("23");
            dia.addItem("24");
            dia.addItem("25");
            dia.addItem("26");
            dia.addItem("27");
            dia.addItem("28");
            dia.addItem("29");
            dia.addItem("30");
            dia.addItem("31");
        }
    }//GEN-LAST:event_mesMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        if(jCheckBox1.isSelected()){
            String aux = titulo.getText().trim(); 
            String aux2 = des.getText().trim();
            String aux3 = (String) jComboBox1.getSelectedItem();
            Calendar calendario = Calendar.getInstance();
            int diaf, mesf,añof, hora, minutos, segundos;
            hora =calendario.get(Calendar.HOUR_OF_DAY);
            minutos = calendario.get(Calendar.MINUTE);
            segundos = calendario.get(Calendar.SECOND);
            diaf = calendario.get(Calendar.DAY_OF_MONTH);
            mesf = calendario.get(Calendar.MONTH);
            añof= calendario.get(Calendar.YEAR);
            
            String cliente = (String) jComboBox1.getSelectedItem();
            int cliente_id = 0;
            try {
                cliente_id = id_cliente(cliente);
            } catch (SQLException ex) {
                Logger.getLogger(pendiente.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("EL nombre del cliente es: "+cliente+"\n");
            System.out.println("EL id del cliente es: "+cliente_id+"\n");
            
            String fecha_c = añof+"-"+mesf+"-"+diaf+" "+hora+":"+minutos+":"+segundos;
            //ESTRUCTURA DATETIME MYSQL YYYY-MM-DD HH:MM:SS
            
            if( (aux.length()== 0)  ||  (aux2.length()== 0) ||  (aux3.length()== 0)){
                JOptionPane.showMessageDialog(null,"Los campos no pueden estar vacíos");
            }else{
                Connection cn=null;
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    cn=DriverManager.getConnection("jdbc:mysql://localhost:3306/asistente_ventas","root","344391");

                    String nombre = titulo.getText();
                    String descripciont = des.getText();

                    String query = "INSERT INTO pendientes (nombre, descripcion, fecha_creacion, fecha_pendiente_dia, fecha_pendiente_mes, fecha_pendiente_ano, cliente) VALUES ('"+nombre+"','"+descripciont+"', '"+fecha_c+"', '"+dia.getSelectedItem()+"', '"+mes.getSelectedItem()+"', '"+año.getSelectedItem()+"', '"+cliente_id+"')";
//                    String query = "INSERT INTO pendientes (nombre, descripcion, fecha_creacion, fecha_pendiente_dia, fecha_pendiente_mes, fecha_pendiente_ano, cliente) VALUES ('"+nombre+"','"+descripcion+"', '"+fecha_c+"', '"+dia+"', '"+mes+"', '"+año+"')";
                    Statement stmt = cn.createStatement();
                    stmt.executeUpdate(query);
                    historial_pendientes(nombre);
                    titulo.setText(""); 
                    des.selectAll();
                    des.replaceSelection("");
                    DesktopNotify.showDesktopMessage("!Correcto¡", "El nuevo pendiente fue agregado con éxito\n", DesktopNotify.SUCCESS, 7000L);
                    
                }catch(SQLException e){
                    System.out.println("SQLException: " + e.getMessage());
                    System.out.println("SQLState: "+e.getSQLState());
                    System.out.println("vendorError: "+e.getErrorCode());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(pendiente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            String aux = titulo.getText().trim(); 
            String aux2 = des.getText();
            String aux3 = (String) jComboBox1.getSelectedItem();
            Calendar calendario = Calendar.getInstance();
            int diaf, mesf,añof, hora, minutos, segundos;
            
            hora =calendario.get(Calendar.HOUR_OF_DAY);
            minutos = calendario.get(Calendar.MINUTE);
            segundos = calendario.get(Calendar.SECOND);
            diaf = calendario.get(Calendar.DAY_OF_MONTH);
            mesf = calendario.get(Calendar.MONTH);
            añof= calendario.get(Calendar.YEAR);
            
            String cliente = (String) jComboBox1.getSelectedItem();
            int cliente_id = 0;
            try {
                cliente_id = id_cliente(cliente);
            } catch (SQLException ex) {
                Logger.getLogger(pendiente.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println("EL nombre del cliente es: "+cliente+"\n");
            System.out.println("EL id del cliente es: "+cliente_id+"\n");
            
            String fecha_c = añof+"-"+mesf+"-"+diaf+" "+hora+":"+minutos+":"+segundos;
            //ESTRUCTURA DATETIME MYSQL YYYY-MM-DD HH:MM:SS
            
            if( (aux.length()== 0)  ||  (aux2.length()== 0)){
                JOptionPane.showMessageDialog(null,"Los campos no pueden estar vacíos");
            }else{
                Connection cn=null;
                try{
                    Class.forName("com.mysql.jdbc.Driver");
                    cn=DriverManager.getConnection("jdbc:mysql://localhost:3306/asistente_ventas","root","344391");

                    String nombre = titulo.getText();
                    String descripcion = (String) jComboBox1.getSelectedItem();
                    String fecha_creacion;
                    String fecha_pendiente ;

                    String query = "INSERT INTO pendientes_default (nombre, descripcion, fecha_creacion, fecha_pendiente_dia, fecha_pendiente_mes, fecha_pendiente_ano) VALUES ('"+nombre+"','"+aux2+"', '"+fecha_c+"', '"+dia.getSelectedItem()+"', '"+mes.getSelectedItem()+"', '"+año.getSelectedItem()+"')";
//                    String query = "INSERT INTO pendientes (nombre, descripcion, fecha_creacion, fecha_pendiente_dia, fecha_pendiente_mes, fecha_pendiente_ano, cliente) VALUES ('"+nombre+"','"+descripcion+"', '"+fecha_c+"', '"+dia+"', '"+mes+"', '"+año+"')";
                    Statement stmt = cn.createStatement();
                    stmt.executeUpdate(query);
                    historial_pendientes(nombre);
                    titulo.setText(""); 
                    
                    des.selectAll();
                    des.replaceSelection("");
                    DesktopNotify.showDesktopMessage("!Correcto¡", "El nuevo pendiente fue agregado con éxito\n", DesktopNotify.SUCCESS, 7000L);
                }catch(SQLException e){
                    System.out.println("SQLException: " + e.getMessage());
                    System.out.println("SQLState: "+e.getSQLState());
                    System.out.println("vendorError: "+e.getErrorCode());
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(pendiente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        DefaultTableModel modelo_pendientes = new DefaultTableModel();
        modelo_pendientes.addColumn("Nombre");
        modelo_pendientes.addColumn("Descripción");
        modelo_pendientes.addColumn("Fecha");
        ArrayList<Object[]> datos = new ArrayList<Object[]>();
        datos=Conexion.llenar_pendientes();
        for(int i=0;i<datos.size();i++){
            modelo_pendientes.addRow(datos.get(i));
        }
        pendientes.setModel(modelo_pendientes);
//        caledario_pendientes();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(pendiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(pendiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(pendiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(pendiente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new pendiente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> año;
    private javax.swing.JTextArea des;
    public javax.swing.JComboBox<String> dia;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    public javax.swing.JComboBox<String> mes;
    private javax.swing.JTextField titulo;
    // End of variables declaration//GEN-END:variables
}
